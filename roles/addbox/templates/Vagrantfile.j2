Vagrant.configure("2") do |config|

  config.vm.box = "centos/7"

  config.vm.define :node{{ host_id|quote }}guest{{ hostvars[groups['new_vms'][my_idx]]['vm_id']|quote }} do |config_node{{ host_id|quote }}guest{{ hostvars[groups['new_vms'][my_idx]]['vm_id']|quote }}|
    config_node{{ host_id|quote }}guest{{ hostvars[groups['new_vms'][my_idx]]['vm_id']|quote }}.vm.hostname = "node{{ host_id|quote }}guest{{ hostvars[groups['new_vms'][my_idx]]['vm_id']|quote }}.tcc.local"
    config_node{{ host_id|quote }}guest{{ hostvars[groups['new_vms'][my_idx]]['vm_id']|quote }}.vm.network :public_network,
      :dev => "{{ mgmt_bridge_iface }}",
      :type => "bridge",
      :libvirt__iface_name => "{{ mgmt_iface_name }}",
      :mac => "{{ hostvars[groups['new_vms'][my_idx]]['mgmt_mac'] }}",
      :ip => "{{ hostvars[groups['new_vms'][my_idx]]['ansible_host'] }}"
    config_node{{ host_id|quote }}guest{{ hostvars[groups['new_vms'][my_idx]]['vm_id']|quote }}.vm.network :public_network,
      :dev => "{{ wan_bridge_iface }}",
      :type => "bridge",
      :libvirt__iface_name => "{{ wan_iface_name }}",
      :mac => "{{ hostvars[groups['new_vms'][my_idx]]['wan_mac'] }}",
      :auto_config => false
    config_node{{ host_id|quote }}guest{{ hostvars[groups['new_vms'][my_idx]]['vm_id']|quote }}.vm.network :public_network,
      :dev => "{{ lan_bridge_iface }}",
      :type => "bridge",
      :libvirt__iface_name => "{{ lan_iface_name }}",
      :mac => "{{ hostvars[groups['new_vms'][my_idx]]['lan_mac'] }}",
      :auto_config => false
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "{{ vm_playbook_absolute_path }}"
  end
  config.vm.provider :libvirt do |domain|
    domain.memory = {% if hostvars[groups['new_vms'][my_idx]]['mode'] == "master-init" %}
{{ vm_memory_master }}
{% elif hostvars[groups['new_vms'][my_idx]]['mode'] == "master" %}
{{ vm_memory_master }}
{% else %}
{{ vm_memory }}
{% endif %}
    domain.cpus = {{ vm_cpus }}
    domain.autostart = true
  end
end
end